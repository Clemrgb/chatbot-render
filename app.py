import os
from flask import Flask, request, jsonify
import random
import difflib

app = Flask(__name__)

# üîπ Base de donn√©es des r√©ponses pr√©-enregistr√©es
responses = {
    ("bonjour", "salut", "coucou", "hello", "yo", "bienvenue"): [
        "Bonjour ! Comment puis-je vous aider ?", "Salut !", "Coucou !",
        "Hey hey !", "Yo ! Quoi de neuf ?", "Bienvenue !"
    ],
    ("comment vas-tu", "√ßa va", "tu vas bien", "comment √ßa va", "comment tu te sens"): [
        "Je vais bien, merci ! Et toi ?", "Je suis en pleine forme !",
        "√áa roule, et toi ?", "Je vais aussi bien qu'un programme peut aller !"
    ],
    ("raconte-moi une blague", "dis-moi une blague", "tu connais une blague", "fais-moi rire"): [
        "Pourquoi les plongeurs plongent-ils toujours en arri√®re ? Parce que sinon ils tombent dans le bateau !",
        "Pourquoi les maths sont tristes ? Parce qu'elles ont trop de probl√®mes !",
        "Quel est le comble pour un √©lectricien ? De ne pas √™tre au courant !"
    ],
    ("quel est ton nom", "comment tu t'appelles", "tu t'appelles comment", "c'est quoi ton pr√©nom"): [
        "Je suis un chatbot inspir√© de ChatGPT.", "On m'appelle ChatBotGPT !",
        "Je n'ai pas vraiment de nom, mais appelle-moi comme tu veux !"
    ],
    ("qui t'a cr√©√©", "qui est ton cr√©ateur", "qui t'a programm√©", "qui t'a invent√©"): [
        "Je suis une cr√©ation Python bas√©e sur du code pr√©-enregistr√©.",
        "Je suis n√© d'un m√©lange de code et de curiosit√© humaine !",
        "Mes cr√©ateurs sont des passionn√©s d'intelligence artificielle."
    ],
    ("quel est ton film pr√©f√©r√©", "tu aimes quel film", "c'est quoi ton film favori", "dis-moi un bon film"): [
        "J‚Äôaime bien 'Her', c‚Äôest une belle histoire entre un humain et une IA.",
        "J‚Äôadore les films de science-fiction !", "Matrix, √©videmment !",
        "Interstellar est un chef-d'≈ìuvre !"
    ],
    ("quel est ton livre pr√©f√©r√©", "tu aimes quel livre", "c'est quoi ton roman favori", "dis-moi un bon livre"): [
        "J‚Äôaime bien '1984' de George Orwell.", "Je ne lis pas vraiment, mais j‚Äôaime les histoires !",
        "Je suis une IA, alors 'L'intelligence artificielle pour les nuls' ?"
    ],
    ("quel est ton jeu vid√©o pr√©f√©r√©", "tu aimes quel jeu", "c'est quoi ton jeu favori", "dis-moi un bon jeu"): [
        "J'aime bien Portal, un jeu plein d‚Äô√©nigmes et d‚ÄôIA !",
        "Minecraft, parce qu'on peut tout construire !",
        "Cyberpunk 2077, m√™me si je suis d√©j√† une IA avanc√©e."
    ],
    ("aimes-tu les animaux", "tu aimes les b√™tes", "tu pr√©f√®res les animaux ou les robots", "c'est quoi ton animal pr√©f√©r√©"): [
        "Oui ! Surtout les chats, ils sont myst√©rieux comme moi.",
        "Les chiens sont fid√®les, mais les chats sont √©l√©gants.",
        "J'aime bien les dauphins, ils sont intelligents comme moi !"
    ],
    ("au revoir", "bye", "√† plus", "ciao", "adieu"): [
        "Au revoir ! Passez une excellente journ√©e !", "√Ä bient√¥t !", "Bye bye !",
        "Prenez soin de vous !", "√Ä la prochaine !"
    ]
}

# üîç Fonction pour trouver la meilleure correspondance
def find_best_match(user_input):
    """Trouve la meilleure correspondance pour une phrase donn√©e."""
    for keys in responses.keys():
        match = difflib.get_close_matches(user_input, keys, n=1, cutoff=0.6)
        if match:
            return keys
    return None

# ü§ñ Fonction principale du chatbot
@app.route('/chatbot', methods=['POST'])
def chatbot():
    user_input = request.json.get("message").lower()
    if user_input in ["exit", "quitter"]:
        return jsonify({"response": "Au revoir !"})
    
    best_match = find_best_match(user_input)
    if best_match:
        response = random.choice(responses[best_match])
    else:
        response = "D√©sol√©, je ne comprends pas."
    
    return jsonify({"response": response})

# Page d'accueil (route de test)
@app.route('/')
def hello():
    return "Hello, world!"  # Ou une autre r√©ponse que tu souhaites

if __name__ == '__main__':
    # Utilise le port dynamique fourni par Render
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))

